#1:
class C {
	a : int
	b : any
	main():int {
		a + (int) b
	}
}


#2:
class A {
	a : any
	getA(): any { a }
}

class B implements A {
	a : int
	getA(): int { a }
}

class C {
	ref : A
	main():any {
		ref = new A(2)
		ref = new B(2)
		ref.getA()
	}
}


#3:
class A {
	getN():int { 2 }
}

class C implements A {
	getN():int { 4 }
}

class D {
	ref : A
	anyref : any
	main():C {
		ref = new C()
		anyref = ref
		(C) anyref
	}
}

#4:
class A { 
  foo() : int { 1 }
}

class B { 
  foo() : str { "meh" }
}

class D {
	ref : A
	anyref : any
	main():B {
		ref = new A()
		anyref = ref
		(B) anyref
	}
}

#5:

class A {
	a : any
	b : any
	main():any {
		foo( (int)a, (int)b)
	}
	foo(a:int, b:int):int {
		a+b
	}
}

#6

class A {
	a : any
	tbs(i1:any, i2:any):any {
		(int)i1 + (int)i2
	}
	main():any {
		a = tbs(2, 3)
		a
	}
}

#7
class A { 
  f() : int { 1 }
}

class B { 
  g() : str { "meh" }
}

class Dummy_A_B implements A, B{
  f() : int { 1 }
  g() : str { "meh" }
}

class D {
	main( x : Dummy_A_B, i : int ) : {
	  if ( i ) then x.f() else x.g()
	}
}


